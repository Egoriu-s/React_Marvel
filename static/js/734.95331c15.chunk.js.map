{"version":3,"file":"static/js/734.95331c15.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/comicList/ComicList.js","components/comicList/ComicListContainer.js","components/pages/ComicsPage.js","components/secondaryComponents/errorMessage/Error.js","components/secondaryComponents/spinner/Spinner.js","hooks/http.hook.js","services/Api.js"],"sourcesContent":["import { memo } from 'react'\r\nimport imgAvengers from \"../../resources/img/Avengers.png\";\r\nimport imgAvengersLogo from \"../../resources/img/Avengers_logo.png\";\r\nimport './appBanner.scss'\r\n\r\nconst AppBanner = () => {\r\n\r\n    //debugger\r\n    console.log(\"Render AppBanner\")\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={imgAvengers} alt=\"Avengers\" />\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!\r\n                <br />\r\n                Stay tuned!\r\n            </div>\r\n            <img src={imgAvengersLogo} alt=\"Avengers logo\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner","import { Link } from \"react-router-dom\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\n\r\nconst ComicList = ({ comicList }) => {\r\n\r\n    const newArray = comicList.map(elem => {\r\n        const imgStyle =\r\n            elem.thumbnail ===\r\n                \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n                ? { objectFit: \"contain\" }\r\n                : { objectFit: \"cover\" };\r\n        return (\r\n            <CSSTransition\r\n                timeout={1500}\r\n                key={elem.id}\r\n                classNames=\"alert\">\r\n                <li className=\"comics__item\" key={elem.id}>\r\n                    <Link to={`/comics/${elem.id}`} >\r\n                        <img\r\n                            src={elem.thumbnail}\r\n                            alt=\"comicImg\"\r\n                            className=\"comics__item-img\"\r\n                            style={imgStyle}\r\n                        />\r\n                        <div className=\"comics__item-name\">{elem.title}</div>\r\n                        <div className=\"comics__item-price\">{elem.price}</div>\r\n                    </Link>\r\n                </li >\r\n            </CSSTransition>\r\n        )\r\n    })\r\n\r\n    //debugger\r\n    //console.log(\"Render Comic List JSX\")\r\n    return (\r\n        <>\r\n            <div className=\"comics__list\">\r\n                <ul className=\"comics__grid\">\r\n                    <TransitionGroup component={null}>\r\n                        {newArray}\r\n                    </TransitionGroup>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicList\r\n","import { useEffect, useState, memo } from \"react\"\r\nimport ComicList from \"./ComicList\"\r\nimport ErrorMessage from \"../secondaryComponents/errorMessage/Error\"\r\nimport Spinner from \"../secondaryComponents/spinner/Spinner\"\r\nimport useMarvelAPI from \"./../../services/Api\"\r\nimport \"./comicList.scss\"\r\n\r\nconst StateMachineComicList = (process, data, newLoading) => {\r\n\r\n  //debugger\r\n  //console.log(\"State Machine\")\r\n  switch (process) {\r\n    case 'waiting': return []\r\n    case 'fetching': return newLoading\r\n      ? <ComicList comicList={data} />\r\n      : <Spinner marginTop={250} />\r\n    case 'error': return <ErrorMessage />\r\n    case 'done': return <ComicList comicList={data} />\r\n    default: throw new Error\r\n\r\n  }\r\n}\r\n\r\nconst ComicListContainer = () => {\r\n  const [comicList, setComicList] = useState([])\r\n  const [newLoading, setNewLoading] = useState(false)\r\n  const [end, setEnd] = useState(false)\r\n  const [offsetComic, setOffsetComic] = useState(210)\r\n  const { getAllComics, clearError, process, setProcess } = useMarvelAPI()\r\n\r\n  const downloadComplete = (comicListNew) => {\r\n    // const end = comicListNew.total - offsetComic > 8 ? false : true\r\n    const end = comicListNew.length < 8 ? true : false\r\n    setComicList((comicList) => [...comicList, ...comicListNew.allComics])\r\n    setEnd(end)\r\n    setOffsetComic(offsetComic + 8)\r\n  }\r\n  const comicListLoading = (offset, initial = false) => {\r\n    initial ? setNewLoading(false) : setNewLoading(true)\r\n    clearError()\r\n    getAllComics(offset)\r\n      .then(downloadComplete)\r\n      .then(() => setProcess('done'))\r\n      .finally(() => setNewLoading(false))\r\n  }\r\n  const loadMoreComics = (offset) => comicListLoading(offset)\r\n\r\n  useEffect(() => comicListLoading(offsetComic, true), [])\r\n\r\n  const styleBtn = {\r\n    display: (end || (process === 'fetching' && !newLoading)) && \"none\",\r\n    opacity: newLoading && 0.5,\r\n  };\r\n\r\n  //debugger\r\n  console.log(\"Render Comic List\")\r\n  return (\r\n    <>\r\n      {StateMachineComicList(process, comicList, newLoading)}\r\n      <button onClick={() => loadMoreComics(offsetComic)} style={styleBtn}\r\n        className=\"button button__main button__long\">\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(ComicListContainer)","import ComicListContainer from \"../comicList/ComicListContainer\"\r\nimport AppBanner from './../appBanner/AppBanner'\r\n\r\nconst ComicsPage = () => {\r\n\r\n    //debugger\r\n    console.log('Comic Page')\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicListContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage","import errorImg from './error.png'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\" }}\r\n            src={errorImg} alt=\"Error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import \"./spinner.scss\"\r\n\r\nconst Spinner = (props) => {\r\n\r\n    const styleSVG = {\r\n        margin: '0 auto',\r\n        background: 'none',\r\n        display: 'block',\r\n        shapeRendering: 'auto'\r\n    }\r\n\r\n    return (\r\n        // <div className=\"loader\">\r\n        //     <div className=\"inner one\"></div>\r\n        //     <div className=\"inner two\"></div>\r\n        //     <div className=\"inner three\"></div>\r\n        // </div>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            style={{ ...styleSVG, ...props }}\r\n            width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(50,50)\">\r\n                <g transform=\"scale(0.94)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"50\" fill=\"#5c5c5c\"></circle>\r\n                    <circle cx=\"0\" cy=\"-25\" r=\"21\" fill=\"#9f0013\">\r\n                        <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"1.1363636363636365s\"\r\n                            repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 0 0;360 0 0\"></animateTransform>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n\r\n}\r\n\r\nexport default Spinner;","import { useState, useCallback } from 'react'\r\n\r\nconst useHttp = () => {\r\n\r\n    const [process, setProcess] = useState('waiting')\r\n    const clearError = () => {\r\n        setProcess('fetching')\r\n    }\r\n    \r\n    const request = useCallback(\r\n        async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n            //debugger\r\n            setProcess('fetching')\r\n            //debugger\r\n            try {\r\n                const response = await fetch(url, { method, body, headers })\r\n                if (response.status !== 200) {\r\n                    throw new Error(`Could not fetch to ${url}, status: ${response.code}`);\r\n                }\r\n                return await response.json()\r\n            }\r\n            catch (error) {\r\n                setProcess('error')\r\n                throw error\r\n            }\r\n        }, [])\r\n\r\n    return { request, clearError, process, setProcess }\r\n}\r\n\r\nexport default useHttp","import useHttp from \"./../hooks/http.hook\"\r\n\r\nconst useMarvelAPI = () => {\r\n  const __apiBase = `https://gateway.marvel.com:443/v1/public/`\r\n  const __apiKey = `ec937b49a92b5506cf1ffa3bc211029f`\r\n  const __offsetBaseChar = 125\r\n  const __offsetBaseComics = 40\r\n  const { request, clearError, process, setProcess } = useHttp()\r\n\r\n  const transformAllCharacters = (response) => {\r\n    const total = response.data.total\r\n    const allCharacter = response.data.results.map((elem) => {\r\n      return {\r\n        id: elem.id,\r\n        name: elem.name,\r\n        description: elem.description,\r\n        thumbnail: `${elem.thumbnail.path}.${elem.thumbnail.extension}`,\r\n      }\r\n    })\r\n    return { allCharacter, total }\r\n  }\r\n  const transformOneCharacter = (character) => {\r\n    //debugger\r\n    if (!character) return {}\r\n    return {\r\n      id: character.id,\r\n      name: character.name,\r\n      description: character.description || 'There is no description',\r\n      thumbnail: `${character.thumbnail.path}.${character.thumbnail.extension}`,\r\n      wiki: character.urls[0].url,\r\n      homepage: character.urls[1].url,\r\n      comicsTotal: character.comics.items.length,\r\n      comics: character.comics.items,\r\n    }\r\n  }\r\n  const transformOneComic = (response) => {\r\n    //debugger\r\n    const comic = response.data.results[0]\r\n    return {\r\n      id: comic.id,\r\n      title: comic.title,\r\n      description: comic.description || 'There is no description',\r\n      language: comic.textObjects[0] ? comic.textObjects[0].language : 'en-us',\r\n      pageCount: comic.PageCount ? `${comic.PageCount} pages` : 'No information about the count of pages',\r\n      price: comic.prices[0].price ? `${comic.prices[0].price} $` : 'No information about the price of comic',\r\n      thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`\r\n    }\r\n  }\r\n  const transformAllComics = (response) => {\r\n    //debugger;\r\n    const total = response.data.total\r\n    const allComics = response.data.results.map((elem) => {\r\n      return {\r\n        id: elem.id,\r\n        title: elem.title,\r\n        price: elem.prices[0].price ? `${elem.prices[0].price} $` : 'No information about the price of comic',\r\n        thumbnail: `${elem.thumbnail.path}.${elem.thumbnail.extension}`\r\n      }\r\n    })\r\n    return { allComics, total }\r\n  }\r\n\r\n  const getAllCharacters = async (offset = __offsetBaseChar) => {\r\n    console.log(\"getAllCharacters\")\r\n    return await request(\r\n      `${__apiBase}characters?limit=9&offset=${offset}&apikey=${__apiKey}`\r\n    ).then(transformAllCharacters)\r\n  }\r\n  // const getCharacter = async (id) => {\r\n  //   console.log(\"getCharacter\")\r\n  //   return await request(\r\n  //     `${__apiBase}characters/${id}?apikey=${__apiKey}`\r\n  //   ).then(transformOneCharacter)\r\n  // }\r\n  const getCharacter = async (id) => {\r\n    console.log(\"getCharacter\")\r\n    const response = await request(`${__apiBase}characters/${id}?apikey=${__apiKey}`)\r\n    return transformOneCharacter(response.data.results[0])\r\n  }\r\n  const getCharacterByName = async (name) => {\r\n    console.log(\"getCharacterByName\")\r\n    const response = await request(`${__apiBase}characters?name=${name}&apikey=${__apiKey}`)\r\n    return transformOneCharacter(response.data.results[0])\r\n  }\r\n  const getAllComics = async (offset = __offsetBaseComics) => {\r\n    console.log(\"getComics\")\r\n    return await request(\r\n      `${__apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&apikey=${__apiKey}`\r\n    ).then(transformAllComics)\r\n  }\r\n  const getComic = async (id) => {\r\n    console.log(\"getComic\")\r\n    return await request(\r\n      `${__apiBase}comics/${id}?apikey=${__apiKey}`\r\n    ).then(transformOneComic)\r\n  }\r\n\r\n  return {\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharacterByName,\r\n    getAllComics,\r\n    getComic,\r\n    clearError,\r\n    process,\r\n    setProcess\r\n  }\r\n\r\n}\r\n\r\nexport default useMarvelAPI\r\n"],"names":["console","log","className","src","imgAvengers","alt","imgAvengersLogo","newArray","comicList","map","elem","imgStyle","thumbnail","objectFit","CSSTransition","timeout","classNames","to","id","style","title","price","TransitionGroup","component","StateMachineComicList","process","data","newLoading","Spinner","marginTop","Error","ComicListContainer","useState","setComicList","setNewLoading","end","setEnd","offsetComic","setOffsetComic","useMarvelAPI","getAllComics","clearError","setProcess","downloadComplete","comicListNew","length","allComics","comicListLoading","offset","initial","then","finally","useEffect","styleBtn","display","opacity","onClick","memo","AppBanner","width","height","margin","errorImg","props","xmlns","background","shapeRendering","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","attributeName","type","dur","repeatCount","keyTimes","values","request","useCallback","url","method","body","headers","fetch","response","status","code","json","__apiBase","__apiKey","useHttp","transformAllCharacters","total","allCharacter","results","name","description","path","extension","transformOneCharacter","character","wiki","urls","homepage","comicsTotal","comics","items","transformOneComic","comic","language","textObjects","pageCount","PageCount","prices","transformAllComics","getAllCharacters","getCharacter","getCharacterByName","getComic"],"sourceRoot":""}